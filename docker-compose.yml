version: '3.8'
services:

  usermanagementapi:
    container_name: UserManagementService
    build:
      context: .
      dockerfile: UserManagementService/Dockerfile
    ports:
      - "8001:80"
    depends_on:
      - usermanagementdb
      - kafka

  orderapi:
    container_name: OrderService
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
      - "8002:80"
    depends_on:
      - orderdb
      - kafka

  deliveryapi:
    container_name: DeliveryMicroservice
    build:
      context: .
      dockerfile: DeliveryMicroservice/Dockerfile
    ports:
      - "8003:80"
    depends_on:
      - deliverydb
      - kafka

  apigateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8004:80

  usermanagementdb:
    image: postgres:latest
    container_name: UsermanagementDb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: usermanagement_db
    volumes:
      - ./database1-data:/var/lib/postgresql/data
    ports:
      - 5433:5432

  orderdb:
    image: postgres:latest
    container_name: OrderDb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: order_db
    volumes:
      - ./database2-data:/var/lib/postgresql/data
    ports:
      - 5434:5432

  deliverydb:
    image: postgres:latest
    container_name: DeliveryDb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: delivery_db
    volumes:
      - ./database3-data:/var/lib/postgresql/data
    ports:
      - 5435:5432

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      KAFKA_PROPERTIES_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_PROPERTIES_GROUPID: "kafdrop"


